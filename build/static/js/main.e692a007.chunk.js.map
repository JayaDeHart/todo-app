{"version":3,"sources":["context/preferences.js","hooks/form.js","components/header.js","components/form.js","components/items.js","components/todo/todo.js","app.js","index.js"],"names":["PreferencesContext","React","createContext","Preferences","props","Provider","value","showCompleted","pagination","sortBy","children","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Header","incomplete","Form","className","onSubmit","onChange","type","placeholder","defaultValue","min","max","Items","toggleComplete","list","map","item","elevation","Elevation","ONE","text","assignee","difficulty","onClick","id","complete","toString","ToDo","setList","setIncomplete","console","log","uuid","page","setPage","useContext","pagPosts","setPagPosts","useEffect","incompleteCount","filter","length","document","title","start","end","slice","items","prev","App","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e692a007.chunk.js","sourcesContent":["import React from 'react';\n\nexport const PreferencesContext = React.createContext();\n\nfunction Preferences(props) {\n  const state = {\n    showCompleted: true,\n    pagination: 4,\n    sortBy: 'assigned',\n  };\n\n  return (\n    <PreferencesContext.Provider value={state}>\n      {props.children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport default Preferences;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>To Do List: {props.incomplete} items pending</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\n\nfunction Form(props) {\n  const { handleChange, handleSubmit } = props;\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <h2>Add To Do Item</h2>\n\n      <label>\n        <span>To Do Item</span>\n        <input\n          onChange={handleChange}\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Item Details\"\n        />\n      </label>\n\n      <label>\n        <span>Assigned To</span>\n        <input\n          onChange={handleChange}\n          name=\"assignee\"\n          type=\"text\"\n          placeholder=\"Assignee Name\"\n        />\n      </label>\n\n      <label>\n        <span>Difficulty</span>\n        <input\n          onChange={handleChange}\n          defaultValue={3}\n          type=\"range\"\n          min={1}\n          max={5}\n          name=\"difficulty\"\n        />\n      </label>\n\n      <label>\n        <Button type=\"submit\">Add Item</Button>\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useContext, useState } from 'react';\nimport { Card, Elevation, Button } from '@blueprintjs/core';\n\nfunction Items(props) {\n  const { toggleComplete, list } = props;\n\n  return (\n    <div className=\"todo-items\">\n      {list.map((item) => (\n        <Card elevation={Elevation.ONE} key={item.id}>\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n          <div onClick={() => toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}\n          </div>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Items;\n","import React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport Header from '../header.js';\nimport Form from '../form';\nimport Items from '../items';\nimport { v4 as uuid } from 'uuid';\nimport { PreferencesContext } from '../../context/preferences';\nimport './todo.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n  const [page, setPage] = useState(0);\n  const prefContext = useContext(PreferencesContext);\n  const { pagination } = prefContext;\n  const [pagPosts, setPagPosts] = useState([]);\n\n  function addItem(item) {\n    console.log(item);\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  useEffect(() => {\n    let start = page * pagination;\n\n    let end = page * pagination + pagination;\n\n    setPagPosts(list.slice(start, end));\n  }, [list, page]);\n\n  function goNext() {\n    setPage((prev) => prev + 1);\n  }\n\n  function goBack() {\n    setPage((prev) => prev - 1);\n  }\n  return (\n    <>\n      <Header incomplete={incomplete} />\n      <div className=\"main-content\">\n        <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n\n        <div>\n          <Items list={pagPosts} toggleComplete={toggleComplete} />\n          {list.length > 4 && <button onClick={goNext}>Next</button>}\n          {list.length > 4 && page > 0 && (\n            <button onClick={goBack}>Previous</button>\n          )}\n          <div>{page}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport PreferencesContext from './context/preferences.js';\nimport ToDo from './components/todo/todo.js';\n\nconst App = () => {\n  return (\n    <PreferencesContext>\n      <ToDo />\n    </PreferencesContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}