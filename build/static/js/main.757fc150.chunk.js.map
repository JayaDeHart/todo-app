{"version":3,"sources":["context/preferences.js","hooks/form.js","components/header.js","components/UserOptions.js","components/form.js","components/items.js","components/todo/todo.js","components/Login.js","app.js","index.js"],"names":["PreferencesContext","React","createContext","Preferences","props","useState","pagination","setPagination","showCompleted","setShowCompleted","useEffect","initialPages","parseInt","localStorage","getItem","initShow","console","log","state","sortBy","Provider","value","children","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Header","incomplete","UserOptions","prefContext","useContext","incrementButton","num","prev","setItem","onClick","toString","Form","className","onSubmit","onChange","type","placeholder","defaultValue","min","max","Items","toggleComplete","list","map","item","elevation","Elevation","ONE","text","assignee","difficulty","id","complete","ToDo","setList","setIncomplete","uuid","page","setPage","pagPosts","setPagPosts","incompleteCount","filter","length","document","title","start","end","slice","filtered","items","Login","formState","setFormState","e","a","header","encode","username","password","axios","post","JSON","stringify","headers","Authorization","results","handleForm","App","path","exact","Main","Component","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.757fc150.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const PreferencesContext = React.createContext();\n\nfunction Preferences(props) {\n  const [pagination, setPagination] = useState(4);\n  const [showCompleted, setShowCompleted] = useState(true);\n\n  useEffect(() => {\n    let initialPages = parseInt(localStorage.getItem('pagination')) || 4;\n    setPagination(initialPages);\n    let initShow = localStorage.getItem('showComp') || true;\n    setShowCompleted(initShow);\n  }, []);\n\n  console.log(localStorage.getItem('showComp'));\n  let state = {\n    setPagination,\n    setShowCompleted,\n    showCompleted,\n    pagination,\n    sortBy: 'assigned',\n  };\n\n  return (\n    <PreferencesContext.Provider value={state}>\n      {props.children}\n    </PreferencesContext.Provider>\n  );\n}\n\nexport default Preferences;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React from 'react';\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>To Do List: {props.incomplete} items pending</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useContext } from 'react';\nimport { PreferencesContext } from '../context/preferences';\nimport { Button } from '@blueprintjs/core';\n\nfunction UserOptions() {\n  const prefContext = useContext(PreferencesContext);\n  const { setPagination, setShowCompleted, showCompleted, pagination } =\n    prefContext;\n  function toggleShowComp() {\n    setShowCompleted((prev) => {\n      localStorage.setItem('showComp', !showCompleted);\n      return !prev;\n    });\n  }\n\n  function incrementButton(num) {\n    console.log(num);\n    setPagination((prev) => {\n      localStorage.setItem('pagination', pagination + num);\n      return prev + num;\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={toggleShowComp}>\n        Show Completed: {showCompleted.toString()}\n      </Button>\n      <div>\n        <p>Display per page: {pagination.toString()}</p>\n        <Button\n          onClick={() => {\n            incrementButton(1);\n          }}\n        >\n          +\n        </Button>\n        <Button\n          onClick={() => {\n            incrementButton(-1);\n          }}\n        >\n          -\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserOptions;\n","import React from 'react';\nimport { Button } from '@blueprintjs/core';\nimport UserOptions from './UserOptions';\n\nfunction Form(props) {\n  const { handleChange, handleSubmit } = props;\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <h2>Add To Do Item</h2>\n\n      <label>\n        <span>To Do Item</span>\n        <input\n          onChange={handleChange}\n          name=\"text\"\n          type=\"text\"\n          placeholder=\"Item Details\"\n        />\n      </label>\n\n      <label>\n        <span>Assigned To</span>\n        <input\n          onChange={handleChange}\n          name=\"assignee\"\n          type=\"text\"\n          placeholder=\"Assignee Name\"\n        />\n      </label>\n\n      <label>\n        <span>Difficulty</span>\n        <input\n          onChange={handleChange}\n          defaultValue={3}\n          type=\"range\"\n          min={1}\n          max={5}\n          name=\"difficulty\"\n        />\n      </label>\n\n      <label>\n        <Button type=\"submit\">Add Item</Button>\n      </label>\n      <UserOptions />\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useContext, useState } from 'react';\nimport { Card, Elevation, Button } from '@blueprintjs/core';\nimport { PreferencesContext } from '../context/preferences';\n\nfunction Items(props) {\n  const { toggleComplete, list } = props;\n  const prefContext = useContext(PreferencesContext);\n  const { showCompleted } = prefContext;\n\n  return (\n    <div className=\"todo-items\">\n      {list.map((item) => (\n        <Card elevation={Elevation.ONE} key={item.id}>\n          <p>{item.text}</p>\n          <p>\n            <small>Assigned to: {item.assignee}</small>\n          </p>\n          <p>\n            <small>Difficulty: {item.difficulty}</small>\n          </p>\n          <div onClick={() => toggleComplete(item.id)}>\n            Complete: {item.complete.toString()}\n          </div>\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Items;\n","import React, { useEffect, useState, useContext } from 'react';\nimport useForm from '../../hooks/form.js';\nimport Header from '../header.js';\nimport Form from '../form';\nimport Items from '../items';\nimport { v4 as uuid } from 'uuid';\nimport { PreferencesContext } from '../../context/preferences';\nimport UserOptions from '../UserOptions.js';\nimport './todo.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\n\nconst ToDo = () => {\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n  const [page, setPage] = useState(0);\n  const prefContext = useContext(PreferencesContext);\n  const { pagination, showCompleted } = prefContext;\n  const [pagPosts, setPagPosts] = useState([]);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter((item) => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n    const items = list.map((item) => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n\n  useEffect(() => {\n    let start = page * pagination;\n\n    let end = page * pagination + pagination;\n\n    if (!showCompleted) {\n      let filtered = list.filter((item) => !item.complete);\n      setPagPosts(filtered.slice(start, end));\n    } else {\n      setPagPosts(list.slice(start, end));\n    }\n  }, [list, page, pagination, showCompleted]);\n\n  function goNext() {\n    setPage((prev) => prev + 1);\n  }\n\n  function goBack() {\n    setPage((prev) => prev - 1);\n  }\n  return (\n    <>\n      <Header incomplete={incomplete} />\n      <div className=\"main-content\">\n        <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n\n        <div>\n          <Items list={pagPosts} toggleComplete={toggleComplete} />\n          {list.length > pagination && <button onClick={goNext}>Next</button>}\n          {list.length > pagination && page > 0 && (\n            <button onClick={goBack}>Previous</button>\n          )}\n          <div>{page}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React, { useState } from 'react';\nimport './login.css';\nimport axios from 'axios';\nimport { decode, encode } from 'base-64';\n\nfunction Login() {\n  const [formState, setFormState] = useState({});\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let header = `Basic ${encode(\n      `${formState.username}:${formState.password}`\n    )}`;\n    console.log(header);\n    try {\n      const results = await axios.post(\n        'http://localhost:4000/signin',\n        JSON.stringify(formState),\n        {\n          headers: {\n            Authorization: header,\n          },\n        }\n      );\n\n      console.log(results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleForm(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    setFormState({ ...formState, [name]: value });\n  }\n\n  return (\n    <div>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input type=\"text\" onChange={handleForm} name=\"username\" />\n        <label>Password</label>\n        <input type=\"text\" onChange={handleForm} name=\"password\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport PreferencesContext from './context/preferences.js';\nimport ToDo from './components/todo/todo.js';\nimport Login from './components/Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <PreferencesContext>\n      <Router>\n        <Switch>\n          <Route path=\"/todo-app/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/todo-app/\">\n            <ToDo />\n          </Route>\n        </Switch>\n      </Router>\n    </PreferencesContext>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}